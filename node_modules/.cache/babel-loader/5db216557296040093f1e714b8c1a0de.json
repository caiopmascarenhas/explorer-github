{"ast":null,"code":"var _jsxFileName = \"/home/raiadrogasil.com/cpmascarenhas/\\xC1rea de Trabalho/PROJECTS GITHUB/explore-github/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport api from '../../services/api';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storageRepositories = localStorage.getItem('@GithubExplore:repositories');\n\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    } else {\n      return [];\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplore:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o autor/nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repositories/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/raiadrogasil.com/cpmascarenhas/Área de Trabalho/PROJECTS GITHUB/explore-github/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","Title","Form","Repositories","Error","api","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","storageRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","description"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom'\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from '../../assets/logo.svg';\nimport api from '../../services/api'\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string,\n    avatar_url: string;\n\n  }\n}\n\nconst Dashboard: React.FC = () => {\n\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('')\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepositories = localStorage.getItem('@GithubExplore:repositories');\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories)\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem('@GithubExplore:repositories',\n      JSON.stringify(repositories))\n  }, [repositories])\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório')\n      return;\n    }\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório')\n    }\n\n  };\n\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github</Title>\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o autor/nome do repositório\" />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n      <Repositories>\n        {repositories.map(repository => (\n          <Link key={repository.full_name} to={`/repositories/${repository.full_name}`}>\n    \n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  )\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}